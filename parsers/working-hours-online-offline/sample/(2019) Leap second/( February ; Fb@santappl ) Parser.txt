text2json parser component

	Documentation
		16:30 ~ 20:30 10.2.2018: Refactoring through commentary — elementaries

	Parser function(alitie)s
	
		13:00 ~ 15:20 11.2.2018: initExpressions functions ; simplifying gesture-tree parser init expressions
		17:00 ~ 17:30 *: lowdb implementation ; parser object with exposed functions and DB

		14:00 ~ 15:30 12.*: Code clarity and proper file structure — commenting export functions (first position in file)
		16:15 ~ 17:15 *: Restructuring expressions and defining a common input schema @KinoŠiška
		17:45 ~ 18:55 *: Defining parser flow @Pritličje
		21:30 - 21:58 *: Defining parser flow // When to include user or admin input to resolve ambiguities — after parseText or mapTokensToSchema?
		21:58 - 22:09 *: *

		13:55 - 16:45 14.*: Parser input schema through custom parser declaration ("gestures-tree") ; Updating expressions @Pritličje
		17:05 - 19:15 *: Expression wrapper with validation and shortcut extensions (with additional arguments) @Pritličje
		13:00 ~ 22:30 (4h) 18.*: * ; Testing JavaScript object of functions, wrapped functions and passing arguments from various sources

		10:45 ~ 13:45 19.*: Researching 'trie' data structure packages and 'parallel regex' (found on npmjs.com: 'triejs', 'regexgen') ; Researching intuitive ways of declaring the conditions to find/match content (find what is expected) and scoop/extract insides or context (what is contained or surrounding it) with 'react-reconciler' in XML/React style
		14:45 - 16:20 *: Researching 'react-reconciler' for XML parser component definitions
		18:00 ~ 22:02 (2h) *: Search engine results lead me to think about my own loop to check a string for multiple expressions in one pass ; Regex parsed by 'regexgen' package insufficiently returns two tokens (and not three) when root and suffix of one word are two distinct, mapped words, too

		9:00 ~ 12:30 20.*: Having fun with github.com/jeresig/trie-js implementation (build-trie file only), where a freshly assigned variable named "trie", which should be empty by expectations, contains the result expected after the for loops building the data tree are run (without any scripts referencing to it or assigning value to it — screenshots and witty comments found on Facebook.com/santappl in a today's post)
		13:30 ~ 16:15 (1h 30min): Working on a buildTrie function 'ground-up', to allow embedding of custom data nodes for each keyword or keyphrase, and to allow for nesting custom longer patterns in between
		17:00 ~ 18:00: Drafting React-based content block patterns and scenarios ; Drafting main runtime parsing functions (matchExpressions, buildTrie_fromObject) and auxiliary ones (pickExpressions, minBufferLength_calculate) ; Drafting a subset of regex-based matchingConditions

		16:15 ~ 18:30: [messy] Consolidating React (XML) and JSON datatypes with Trie expression parsing function (in conceptualization) @Pritličje

		18:40 - 19:00: Drafting a walkthrough in README.md

		16:20 ~ 17:00 26.*: Commenting a customParser rendering component (its flow and possible positioning of custom parser within text2json package container — as a wrapper or a container)

		18:00 - 18:30 *: *

		19:30 - … [!!!] *: Generating a script which finds rhymes in a Facebook JSON archive

		18:30 - 19:00 3/3/'19: Rearranging file structure of main parser package

		* 4.3.*: Documenting converging standard expressions (Regex & alike, which are replaced to reduce amount of expressions parser handles in one call)

		6:15 - 6:30 5.*: Exporting "To-do" statements during work (marked with !…, ?…, ¿…)

		14:00 - 15:44 8.*: Working in './db.js', './parser.runtime.js' and with 'orderedList' block/expression

		16:50 - 18:00 *: Working around _.filter function limitations, understanding custom sorting function (to reduce amound of times an array is looped through at a later point)

		18:45 - 19:20 *: *

		16:00 - 18:03 10.*: Reworking parser's internal token database in './index.js' and './expressions/orderedList.js' ; Shaping an Expression/Block JSON object ; Redesigning database (in case a custom JS sorting function wraps other functionalities, for efficiency) ; To separately list expressions, which are recurring, but not in the top level of Trie structure

		12:00 - 13:30 12.*: Rhymes LiederHolen: Creating a script, which loops through Facebook archive, extracing a histogram of keywords (+ creating an index) and using Diff-Match-Patch to let user map rhymes

		19:00 - 22:00 12.*: * ; Creating a wrapper function, which can take in any given parser (meaningfully) and return inputs with some added value

		10:00 - 13:07 14.*: * ; »simpl-schema« package as a substitute for »JSON schema« to validate outputs ; Documentation and cleaning up code in './index.js'

--------



		~8:00 28.2.
			5. tone of main theme of Fliwo - Yehay … transponed(A)
			A -V3 -M3 A -4 A/(A-1/2)

		8:44 *
			1. I like the way you move, I like the way you move
			2. A A A

			5. tone of main theme of Fliwo - Yehay … GIS transponed(A)

			1. tone of main theme of Fliwo … transponed(C) oder transponed(H) = transponed(A) + M3

			1. GIS GIS— GIS(-M3)[.] GIS GIS[.] GIS—
			2. C [...] H [.] A—