text2json parser component

	Documentation
		16:30 ~ 20:30 10.2.2018: Refactoring through commentary — elementaries

	Parser function(alitie)s
		13:00 ~ 15:20 11.2.2018: initExpressions functions ; simplifying gesture-tree parser init expressions
		17:00 ~ 17:30 *: lowdb implementation ; parser object with exposed functions and DB
		14:00 ~ 15:30 12.*: Code clarity and proper file structure — commenting export functions (first position in file)
		16:15 ~ 17:15 *: Restructuring expressions and defining a common input schema @KinoŠiška
		17:45 ~ 18:55 *: Defining parser flow @Pritličje
		21:30 - 21:58 *: Defining parser flow // When to include user or admin input to resolve ambiguities — after parseText or mapTokensToSchema?
		21:58 - 22:09 *: *
		13:55 - 16:45 14.*: Parser input schema through custom parser declaration ("gestures-tree") ; Updating expressions @Pritličje
		17:05 - 19:15 *: Expression wrapper with validation and shortcut extensions (with additional arguments) @Pritličje
		13:00 ~ 22:30 (4h) 18.*: * ; Testing JavaScript object of functions, wrapped functions and passing arguments from various sources
		10:45 ~ 13:45 19.*: Researching 'trie' data structure packages and 'parallel regex' (found on npmjs.com: 'triejs', 'regexgen') ; Researching intuitive ways of declaring the conditions to find/match content (find what is expected) and scoop/extract insides or context (what is contained or surrounding it) with 'react-reconciler' in XML/React style
		14:45 - 16:20 *: Researching 'react-reconciler' for XML parser component definitions
		18:00 ~ 22:02 (2h) *: Search engine results lead me to think about my own loop to check a string for multiple expressions in one pass ; Regex parsed by 'regexgen' package insufficiently returns two tokens (and not three) when root and suffix of one word are two distinct, mapped words, too
		9:00 ~ 12:30 20.*: Having fun with github.com/jeresig/trie-js implementation (build-trie file only), where a freshly assigned variable named "trie", which should be empty by expectations, contains the result expected after the for loops building the data tree are run (without any scripts referencing to it or assigning value to it — screenshots and witty comments found on Facebook.com/santappl in a today's post)
		13:30 ~ 16:15 (1h 30min): Working on a buildTrie function 'ground-up', to allow embedding of custom data nodes for each keyword or keyphrase, and to allow for nesting custom longer patterns in between
		17:00 ~ 18:00: Drafting React-based parser blocks ; Drafting main runtime parsing functions (matchExpressions, buildTrie_fromObject) and auxiliary ones (pickExpressions, minBufferLength_calculate) ; Drafting a subset of regex-based matchingConditions